"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _index = require("../../../Grid/index");

var _index2 = _interopRequireDefault(require("../../../Components/Text/index"));

var _index3 = _interopRequireDefault(require("../../../Components/Cards/Hired/index"));

var _index4 = _interopRequireDefault(require("../../../Components/Button/index"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var VHPremiumHiredSection = function VHPremiumHiredSection(props) {
  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_index.Row, {
    alignItemsCenter: true,
    marginTop: 40,
    marginBottom: 30
  }, _react.default.createElement(_index2.default, {
    variant: "h2",
    color: "gray-100",
    text: props.sectionTitle
  })), _react.default.createElement(_index.Row, {
    row: true,
    marginBottom: 30
  }, props.candidates.map(function (candidate) {
    return _react.default.createElement(_index.Row, {
      style: {
        backgroundColor: "#f2f6f9",
        width: "180px",
        height: "180px",
        padding: "24px",
        marginRight: "10px"
      }
    }, _react.default.createElement(_index3.default, {
      name: candidate.name,
      position: candidate.position,
      country: candidate.country,
      userPhoto: candidate.userPhoto,
      flag: candidate.flag
    }));
  })), _react.default.createElement(_index.Row, {
    alignItemsCenter: true
  }, _react.default.createElement(_index.Row, {
    width: "30%"
  }, _react.default.createElement(_index4.default, {
    label: props.btnLabel,
    secondary: true,
    lg: true
  }))));
};

VHPremiumHiredSection.propTypes = {
  onEvent: _propTypes.default.func,
  data: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),
  className: _propTypes.default.string,
  sectionTitle: _propTypes.default.string,
  btnLabel: _propTypes.default.string,
  name: _propTypes.default.string,
  position: _propTypes.default.string,
  country: _propTypes.default.string,
  userPhoto: _propTypes.default.string,
  flag: _propTypes.default.string
};
var _default = VHPremiumHiredSection;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhY2thZ2VzL1NlY3Rpb25zL1ByZW1pdW0vSGlyZWQvaW5kZXguanN4Il0sIm5hbWVzIjpbIlZIUHJlbWl1bUhpcmVkU2VjdGlvbiIsInByb3BzIiwic2VjdGlvblRpdGxlIiwiY2FuZGlkYXRlcyIsIm1hcCIsImNhbmRpZGF0ZSIsImJhY2tncm91bmRDb2xvciIsIndpZHRoIiwiaGVpZ2h0IiwicGFkZGluZyIsIm1hcmdpblJpZ2h0IiwibmFtZSIsInBvc2l0aW9uIiwiY291bnRyeSIsInVzZXJQaG90byIsImZsYWciLCJidG5MYWJlbCIsInByb3BUeXBlcyIsIm9uRXZlbnQiLCJQcm9wVHlwZXMiLCJmdW5jIiwiZGF0YSIsIm9uZU9mVHlwZSIsInN0cmluZyIsIm9iamVjdCIsImNsYXNzTmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEscUJBQXFCLEdBQUcsU0FBeEJBLHFCQUF3QixDQUFBQyxLQUFLLEVBQUk7QUFDckMsU0FDTSw2QkFBQyxjQUFELENBQU8sUUFBUCxRQUNJLDZCQUFDLFVBQUQ7QUFBSyxJQUFBLGdCQUFnQixNQUFyQjtBQUFzQixJQUFBLFNBQVMsRUFBRSxFQUFqQztBQUFxQyxJQUFBLFlBQVksRUFBRTtBQUFuRCxLQUNJLDZCQUFDLGVBQUQ7QUFDSSxJQUFBLE9BQU8sRUFBRSxJQURiO0FBRUksSUFBQSxLQUFLLEVBQUUsVUFGWDtBQUdJLElBQUEsSUFBSSxFQUFFQSxLQUFLLENBQUNDO0FBSGhCLElBREosQ0FESixFQVFJLDZCQUFDLFVBQUQ7QUFBSyxJQUFBLEdBQUcsTUFBUjtBQUFTLElBQUEsWUFBWSxFQUFFO0FBQXZCLEtBQ0tELEtBQUssQ0FBQ0UsVUFBTixDQUFpQkMsR0FBakIsQ0FBcUIsVUFBQUMsU0FBUztBQUFBLFdBQzNCLDZCQUFDLFVBQUQ7QUFBSyxNQUFBLEtBQUssRUFBRTtBQUFFQyxRQUFBQSxlQUFlLEVBQUUsU0FBbkI7QUFBOEJDLFFBQUFBLEtBQUssRUFBRSxPQUFyQztBQUE4Q0MsUUFBQUEsTUFBTSxFQUFFLE9BQXREO0FBQStEQyxRQUFBQSxPQUFPLEVBQUUsTUFBeEU7QUFBZ0ZDLFFBQUFBLFdBQVcsRUFBRTtBQUE3RjtBQUFaLE9BQ0ksNkJBQUMsZUFBRDtBQUNJLE1BQUEsSUFBSSxFQUFFTCxTQUFTLENBQUNNLElBRHBCO0FBRUksTUFBQSxRQUFRLEVBQUVOLFNBQVMsQ0FBQ08sUUFGeEI7QUFHSSxNQUFBLE9BQU8sRUFBRVAsU0FBUyxDQUFDUSxPQUh2QjtBQUlJLE1BQUEsU0FBUyxFQUFFUixTQUFTLENBQUNTLFNBSnpCO0FBS0ksTUFBQSxJQUFJLEVBQUVULFNBQVMsQ0FBQ1U7QUFMcEIsTUFESixDQUQyQjtBQUFBLEdBQTlCLENBREwsQ0FSSixFQXFCSSw2QkFBQyxVQUFEO0FBQUssSUFBQSxnQkFBZ0I7QUFBckIsS0FDSSw2QkFBQyxVQUFEO0FBQUssSUFBQSxLQUFLLEVBQUU7QUFBWixLQUNRLDZCQUFDLGVBQUQ7QUFDSSxJQUFBLEtBQUssRUFBRWQsS0FBSyxDQUFDZSxRQURqQjtBQUVJLElBQUEsU0FBUyxNQUZiO0FBR0ksSUFBQSxFQUFFO0FBSE4sSUFEUixDQURKLENBckJKLENBRE47QUFpQ0QsQ0FsQ0Q7O0FBb0NBaEIscUJBQXFCLENBQUNpQixTQUF0QixHQUFrQztBQUNoQ0MsRUFBQUEsT0FBTyxFQUFFQyxtQkFBVUMsSUFEYTtBQUVoQ0MsRUFBQUEsSUFBSSxFQUFFRixtQkFBVUcsU0FBVixDQUFvQixDQUFDSCxtQkFBVUksTUFBWCxFQUFtQkosbUJBQVVLLE1BQTdCLENBQXBCLENBRjBCO0FBR2hDQyxFQUFBQSxTQUFTLEVBQUVOLG1CQUFVSSxNQUhXO0FBSWhDckIsRUFBQUEsWUFBWSxFQUFFaUIsbUJBQVVJLE1BSlE7QUFLaENQLEVBQUFBLFFBQVEsRUFBRUcsbUJBQVVJLE1BTFk7QUFNaENaLEVBQUFBLElBQUksRUFBRVEsbUJBQVVJLE1BTmdCO0FBT2hDWCxFQUFBQSxRQUFRLEVBQUVPLG1CQUFVSSxNQVBZO0FBUWhDVixFQUFBQSxPQUFPLEVBQUVNLG1CQUFVSSxNQVJhO0FBU2hDVCxFQUFBQSxTQUFTLEVBQUVLLG1CQUFVSSxNQVRXO0FBVWhDUixFQUFBQSxJQUFJLEVBQUVJLG1CQUFVSTtBQVZnQixDQUFsQztlQWFldkIscUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IFJvdyB9IGZyb20gXCIuLi8uLi8uLi9HcmlkL2luZGV4XCI7XG5pbXBvcnQgVkhUZXh0IGZyb20gXCIuLi8uLi8uLi9Db21wb25lbnRzL1RleHQvaW5kZXhcIjtcbmltcG9ydCBWSENhcmRIaXJlZCBmcm9tIFwiLi4vLi4vLi4vQ29tcG9uZW50cy9DYXJkcy9IaXJlZC9pbmRleFwiO1xuaW1wb3J0IFZIQnV0dG9uIGZyb20gXCIuLi8uLi8uLi9Db21wb25lbnRzL0J1dHRvbi9pbmRleFwiO1xuXG5jb25zdCBWSFByZW1pdW1IaXJlZFNlY3Rpb24gPSBwcm9wcyA9PiB7XG4gIHJldHVybiAoXG4gICAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgIDxSb3cgYWxpZ25JdGVtc0NlbnRlciBtYXJnaW5Ub3A9ezQwfSBtYXJnaW5Cb3R0b209ezMwfT5cbiAgICAgICAgICAgICAgICA8VkhUZXh0IFxuICAgICAgICAgICAgICAgICAgICB2YXJpYW50PXtcImgyXCJ9XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yPXtcImdyYXktMTAwXCJ9XG4gICAgICAgICAgICAgICAgICAgIHRleHQ9e3Byb3BzLnNlY3Rpb25UaXRsZX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9Sb3c+XG4gICAgICAgICAgICA8Um93IHJvdyBtYXJnaW5Cb3R0b209ezMwfT5cbiAgICAgICAgICAgICAgICB7cHJvcHMuY2FuZGlkYXRlcy5tYXAoY2FuZGlkYXRlID0+IChcbiAgICAgICAgICAgICAgICAgICAgPFJvdyBzdHlsZT17eyBiYWNrZ3JvdW5kQ29sb3I6IFwiI2YyZjZmOVwiLCB3aWR0aDogXCIxODBweFwiLCBoZWlnaHQ6IFwiMTgwcHhcIiwgcGFkZGluZzogXCIyNHB4XCIsIG1hcmdpblJpZ2h0OiBcIjEwcHhcIiB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxWSENhcmRIaXJlZCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPXtjYW5kaWRhdGUubmFtZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbj17Y2FuZGlkYXRlLnBvc2l0aW9ufVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50cnk9e2NhbmRpZGF0ZS5jb3VudHJ5fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJQaG90bz17Y2FuZGlkYXRlLnVzZXJQaG90b31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmbGFnPXtjYW5kaWRhdGUuZmxhZ31cbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvUm93PlxuICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgPC9Sb3c+XG4gICAgICAgICAgICA8Um93IGFsaWduSXRlbXNDZW50ZXI+XG4gICAgICAgICAgICAgICAgPFJvdyB3aWR0aD17XCIzMCVcIn0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8VkhCdXR0b24gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9e3Byb3BzLmJ0bkxhYmVsfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlY29uZGFyeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxnXG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICA8L1Jvdz5cbiAgICAgICAgICAgICAgICA8L1Jvdz5cbiAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICApXG59XG5cblZIUHJlbWl1bUhpcmVkU2VjdGlvbi5wcm9wVHlwZXMgPSB7XG4gIG9uRXZlbnQ6IFByb3BUeXBlcy5mdW5jLFxuICBkYXRhOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMub2JqZWN0XSksXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgc2VjdGlvblRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBidG5MYWJlbDogUHJvcFR5cGVzLnN0cmluZyxcbiAgbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgcG9zaXRpb246IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNvdW50cnk6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHVzZXJQaG90bzogUHJvcFR5cGVzLnN0cmluZyxcbiAgZmxhZzogUHJvcFR5cGVzLnN0cmluZyxcbn1cblxuZXhwb3J0IGRlZmF1bHQgVkhQcmVtaXVtSGlyZWRTZWN0aW9uOyJdfQ==