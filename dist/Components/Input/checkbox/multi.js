"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Grid = require("../../../Grid");

var _ = _interopRequireDefault(require("."));

var _styles = require("./styles");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var VHInputCheckboxMulti = function VHInputCheckboxMulti(props) {
  return _react.default.createElement(_Grid.Row, {
    row: true,
    className: "vh-checkbox ".concat(props.className ? props.className : ''),
    autoWidth: true
  }, props.items.map(function (item) {
    return _react.default.createElement(_styles.WrapperMulti, {
      key: "vh-input-multi-".concat(item.id)
    }, _react.default.createElement(_.default, {
      title: item.label,
      color: "gray-100",
      variant: "platform1",
      data: item,
      value: item.value,
      name: "".concat(item.label, "-input-checkbox"),
      id: "".concat(item.id, "-vh-input-checkbox"),
      onEvent: props.onEvent,
      checked: item.checked
    }));
  }));
};

VHInputCheckboxMulti.defaultProps = {
  onEvent: null,
  items: null,
  className: ''
};
VHInputCheckboxMulti.propTypes = {
  onEvent: _propTypes.default.func.isRequired,
  items: _propTypes.default.string,
  className: _propTypes.default.string
};
var _default = VHInputCheckboxMulti;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhY2thZ2VzL0NvbXBvbmVudHMvSW5wdXQvY2hlY2tib3gvbXVsdGkuanN4Il0sIm5hbWVzIjpbIlZISW5wdXRDaGVja2JveE11bHRpIiwicHJvcHMiLCJjbGFzc05hbWUiLCJpdGVtcyIsIm1hcCIsIml0ZW0iLCJpZCIsImxhYmVsIiwidmFsdWUiLCJvbkV2ZW50IiwiY2hlY2tlZCIsImRlZmF1bHRQcm9wcyIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsImZ1bmMiLCJpc1JlcXVpcmVkIiwic3RyaW5nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxvQkFBb0IsR0FBRyxTQUF2QkEsb0JBQXVCLENBQUFDLEtBQUssRUFBSTtBQUVwQyxTQUNFLDZCQUFDLFNBQUQ7QUFBSyxJQUFBLEdBQUcsTUFBUjtBQUFTLElBQUEsU0FBUyx3QkFBaUJBLEtBQUssQ0FBQ0MsU0FBTixHQUFrQkQsS0FBSyxDQUFDQyxTQUF4QixHQUFvQyxFQUFyRCxDQUFsQjtBQUE2RSxJQUFBLFNBQVM7QUFBdEYsS0FDR0QsS0FBSyxDQUFDRSxLQUFOLENBQVlDLEdBQVosQ0FBZ0IsVUFBQUMsSUFBSSxFQUFJO0FBQ3JCLFdBQ0UsNkJBQUMsb0JBQUQ7QUFBYyxNQUFBLEdBQUcsMkJBQW9CQSxJQUFJLENBQUNDLEVBQXpCO0FBQWpCLE9BQ0ksNkJBQUMsU0FBRDtBQUNJLE1BQUEsS0FBSyxFQUFFRCxJQUFJLENBQUNFLEtBRGhCO0FBRUksTUFBQSxLQUFLLEVBQUMsVUFGVjtBQUdJLE1BQUEsT0FBTyxFQUFDLFdBSFo7QUFJSSxNQUFBLElBQUksRUFBRUYsSUFKVjtBQUtJLE1BQUEsS0FBSyxFQUFFQSxJQUFJLENBQUNHLEtBTGhCO0FBTUksTUFBQSxJQUFJLFlBQUtILElBQUksQ0FBQ0UsS0FBVixvQkFOUjtBQU9JLE1BQUEsRUFBRSxZQUFLRixJQUFJLENBQUNDLEVBQVYsdUJBUE47QUFRSSxNQUFBLE9BQU8sRUFBRUwsS0FBSyxDQUFDUSxPQVJuQjtBQVNJLE1BQUEsT0FBTyxFQUFFSixJQUFJLENBQUNLO0FBVGxCLE1BREosQ0FERjtBQWVILEdBaEJBLENBREgsQ0FERjtBQXFCRCxDQXZCRDs7QUF5QkFWLG9CQUFvQixDQUFDVyxZQUFyQixHQUFvQztBQUNoQ0YsRUFBQUEsT0FBTyxFQUFFLElBRHVCO0FBRWhDTixFQUFBQSxLQUFLLEVBQUUsSUFGeUI7QUFHaENELEVBQUFBLFNBQVMsRUFBRTtBQUhxQixDQUFwQztBQU1BRixvQkFBb0IsQ0FBQ1ksU0FBckIsR0FBaUM7QUFDL0JILEVBQUFBLE9BQU8sRUFBRUksbUJBQVVDLElBQVYsQ0FBZUMsVUFETztBQUUvQlosRUFBQUEsS0FBSyxFQUFFVSxtQkFBVUcsTUFGYztBQUcvQmQsRUFBQUEsU0FBUyxFQUFFVyxtQkFBVUc7QUFIVSxDQUFqQztlQU1laEIsb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgeyBSb3cgfSBmcm9tICcuLi8uLi8uLi9HcmlkJ1xuaW1wb3J0IFZISW5wdXRDaGVja2JveCBmcm9tICcuJ1xuaW1wb3J0IHsgV3JhcHBlck11bHRpIH0gZnJvbSAnLi9zdHlsZXMnXG5cbmNvbnN0IFZISW5wdXRDaGVja2JveE11bHRpID0gcHJvcHMgPT4ge1xuICBcbiAgcmV0dXJuIChcbiAgICA8Um93IHJvdyBjbGFzc05hbWU9e2B2aC1jaGVja2JveCAke3Byb3BzLmNsYXNzTmFtZSA/IHByb3BzLmNsYXNzTmFtZSA6ICcnfWB9IGF1dG9XaWR0aD5cbiAgICAgIHtwcm9wcy5pdGVtcy5tYXAoaXRlbSA9PiB7XG4gICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxXcmFwcGVyTXVsdGkga2V5PXtgdmgtaW5wdXQtbXVsdGktJHtpdGVtLmlkfWB9PlxuICAgICAgICAgICAgICAgIDxWSElucHV0Q2hlY2tib3ggICAgICAgIFxuICAgICAgICAgICAgICAgICAgICB0aXRsZT17aXRlbS5sYWJlbH1cbiAgICAgICAgICAgICAgICAgICAgY29sb3I9XCJncmF5LTEwMFwiXG4gICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ9XCJwbGF0Zm9ybTFcIlxuICAgICAgICAgICAgICAgICAgICBkYXRhPXtpdGVtfVxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17aXRlbS52YWx1ZX1cbiAgICAgICAgICAgICAgICAgICAgbmFtZT17YCR7aXRlbS5sYWJlbH0taW5wdXQtY2hlY2tib3hgfVxuICAgICAgICAgICAgICAgICAgICBpZD17YCR7aXRlbS5pZH0tdmgtaW5wdXQtY2hlY2tib3hgfVxuICAgICAgICAgICAgICAgICAgICBvbkV2ZW50PXtwcm9wcy5vbkV2ZW50fVxuICAgICAgICAgICAgICAgICAgICBjaGVja2VkPXtpdGVtLmNoZWNrZWR9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvV3JhcHBlck11bHRpPlxuICAgICAgICAgIClcbiAgICAgIH0pfVxuICAgIDwvUm93PlxuICApXG59XG5cblZISW5wdXRDaGVja2JveE11bHRpLmRlZmF1bHRQcm9wcyA9IHtcbiAgICBvbkV2ZW50OiBudWxsLFxuICAgIGl0ZW1zOiBudWxsLFxuICAgIGNsYXNzTmFtZTogJycsXG59XG5cblZISW5wdXRDaGVja2JveE11bHRpLnByb3BUeXBlcyA9IHtcbiAgb25FdmVudDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgaXRlbXM6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbn1cblxuZXhwb3J0IGRlZmF1bHQgVkhJbnB1dENoZWNrYm94TXVsdGlcbiJdfQ==